// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Server.Database;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Server.Modal.Case", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CooperatorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Case");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "789 Birch St, Gotham",
                            CooperatorId = 1L,
                            Description = "Investigation about environmental impact",
                            Name = "Case Alpha"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "159 Cedar St, Star City",
                            CooperatorId = 2L,
                            Description = "A study on urban development",
                            Name = "Case Beta"
                        },
                        new
                        {
                            Id = 3L,
                            Address = "202 Elm St, Metropolis",
                            CooperatorId = 3L,
                            Description = "Research on traffic patterns",
                            Name = "Case Gamma"
                        },
                        new
                        {
                            Id = 4L,
                            Address = "345 Oak St, Springfield",
                            CooperatorId = 4L,
                            Description = "Energy consumption analysis",
                            Name = "Case Delta"
                        },
                        new
                        {
                            Id = 5L,
                            Address = "987 Maple St, Central City",
                            CooperatorId = 5L,
                            Description = "Water quality monitoring",
                            Name = "Case Epsilon"
                        });
                });

            modelBuilder.Entity("Server.Modal.Report", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Report");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "789 Birch St, Gotham",
                            Description = "Initial findings on air quality.",
                            Email = "reporter1@example.com"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "159 Cedar St, Star City",
                            Description = "Preliminary analysis of traffic data.",
                            Email = "reporter2@example.com"
                        },
                        new
                        {
                            Id = 3L,
                            Address = "202 Elm St, Metropolis",
                            Description = "Research summary on congestion.",
                            Email = "reporter3@example.com"
                        },
                        new
                        {
                            Id = 4L,
                            Address = "345 Oak St, Springfield",
                            Description = "Energy report for industrial area.",
                            Email = "reporter4@example.com"
                        },
                        new
                        {
                            Id = 5L,
                            Address = "987 Maple St, Central City",
                            Description = "Analysis of water contaminants.",
                            Email = "reporter5@example.com"
                        });
                });

            modelBuilder.Entity("Server.Modal.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "123 Elm St, Springfield",
                            Email = "john.doe@example.com",
                            Name = "John Doe",
                            Password = "password123",
                            Phone = "123-456-7890",
                            Role = 0
                        },
                        new
                        {
                            Id = 2L,
                            Address = "456 Oak St, Metropolis",
                            Email = "jane.smith@example.com",
                            Name = "Jane Smith",
                            Password = "password456",
                            Phone = "987-654-3210",
                            Role = 1
                        },
                        new
                        {
                            Id = 3L,
                            Address = "789 Pine St, Gotham",
                            Email = "alice.johnson@example.com",
                            Name = "Alice Johnson",
                            Password = "alicepwd789",
                            Phone = "456-789-1234",
                            Role = 1
                        },
                        new
                        {
                            Id = 4L,
                            Address = "101 Maple St, Star City",
                            Email = "bob.williams@example.com",
                            Name = "Bob Williams",
                            Password = "bobpwd101",
                            Phone = "789-123-4567",
                            Role = 2
                        },
                        new
                        {
                            Id = 5L,
                            Address = "202 Cedar St, Central City",
                            Email = "eve.davis@example.com",
                            Name = "Eve Davis",
                            Password = "evepwd202",
                            Phone = "123-321-4567",
                            Role = 0
                        });
                });

            modelBuilder.Entity("Server.Modal.VolunteerCase", b =>
                {
                    b.Property<long>("volunteerId")
                        .HasColumnType("bigint");

                    b.Property<long>("caseId")
                        .HasColumnType("bigint");

                    b.HasKey("volunteerId", "caseId");

                    b.ToTable("VolunteerCase");

                    b.HasData(
                        new
                        {
                            volunteerId = 1L,
                            caseId = 1L
                        },
                        new
                        {
                            volunteerId = 1L,
                            caseId = 2L
                        },
                        new
                        {
                            volunteerId = 2L,
                            caseId = 3L
                        },
                        new
                        {
                            volunteerId = 3L,
                            caseId = 4L
                        },
                        new
                        {
                            volunteerId = 4L,
                            caseId = 5L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
